close_app_data.f90:MODULE close_app_data
close_app_data.f90:END MODULE close_app_data 
close_app.f90:MODULE close_app
close_app.f90:      SUBROUTINE cloapp(tcur,th,xa,va,nv,idc,xpla,xldir,dir,nes,cloend) 
close_app.f90:      END SUBROUTINE cloapp  
close_app.f90:      SUBROUTINE stepcon(x,v,npoin,disc,dir,dt) 
close_app.f90:      END SUBROUTINE stepcon                                          
close_app.f90:      SUBROUTINE falsi(t,xa,va,nv,xpla,jc,jt,first,iplam) 
close_app.f90:      END SUBROUTINE falsi                                          
close_app.f90:      SUBROUTINE strclo(planam,tcur,xpla,xa,va,nv,jc,r,rdot,            &
close_app.f90:      END SUBROUTINE strclo 
close_app.f90:END MODULE close_app  
close_app.f90:      SUBROUTINE npoint_set(npmult)
close_app.f90:      END SUBROUTINE npoint_set
close_app.f90:      SUBROUTINE set_clost(clostin)
close_app.f90:      END SUBROUTINE set_clost
close_app.f90:      SUBROUTINE cov_avai(g) 
close_app.f90:      END SUBROUTINE cov_avai                                          
close_app.f90:      SUBROUTINE cov_not_av 
close_app.f90:      END SUBROUTINE cov_not_av                                          
close_app.f90:      SUBROUTINE clotest(t0,east,iplanet,texit) 
close_app.f90:      END SUBROUTINE clotest  
  
ephem_prop.f90:SUBROUTINE fstpro(batch,icov,ini0,cov0,iun20,iun8,ok,             &
ephem_prop.f90:END SUBROUTINE fstpro
ephem_prop.f90:SUBROUTINE proele(coo,t0,east0,t1,east1)
ephem_prop.f90:END SUBROUTINE proele
ephem_prop.f90:SUBROUTINE proelc(coo,t0,east0,gamma0,c0,t1,east1,gamma1,c1) 
ephem_prop.f90:END SUBROUTINE proelc
ephem_prop.f90:SUBROUTINE fsteph(name,dir,defele,ok,coord,t0,eq0,                &
ephem_prop.f90:END SUBROUTINE fsteph
ephem_prop.f90:      SUBROUTINE ephemc(unit,eltype,t0,elem,cove,defcov,t1,t2,dt,mass,  &
ephem_prop.f90:      END SUBROUTINE ephemc                                          
ephem_prop.f90:      SUBROUTINE srtept(t,n,t0,ipt) 
ephem_prop.f90:      SUBROUTINE outco(iun,gamma,c) 

fitsubs.f90:      SUBROUTINE whicor(inter,icor,ncor,inew) 
fitsubs.f90:      SUBROUTINE chereq(icov,ini,cov,t,iun20,iun8,ok) 
fitsubs.f90:      SUBROUTINE cheobs(obs,ini,ok) 
fitsubs.f90:      SUBROUTINE chetim(t1,t2,ok) 
fitsubs.f90:      SUBROUTINE seleph(tut1,tdt1,tut2,tdt2,dt,idsta) 
fitsubs.f90:      SUBROUTINE asstim(icov,type,tau,tut,idsta,m,mall,im,              &
fitsubs.f90:      END SUBROUTINE asstim                                          
fitsubs.f90:      SUBROUTINE asscbd(iun20,npox,npo,sigma,ibv) 
fitsubs.f90:      SUBROUTINE orb_sel(ini0,inip,initwo,isel) 
fitsubs.f90:      SUBROUTINE start(eq0,eqp,t0,tp,iorb,ng,enm,am,plm)

force_model.f90:MODULE force_model
force_model.f90:  subroutine masjpl 
force_model.f90:  END SUBROUTINE masjpl
force_model.f90:  SUBROUTINE force(x,v,t0,f,nd,idc,xxpla,ips,imem) 
force_model.f90:   SUBROUTINE planast(t0,ips,imem,velo_intrp,xpla) 
force_model.f90:   END SUBROUTINE planast
force_model.f90:   SUBROUTINE j2sun(x,accj2) 
force_model.f90:   END SUBROUTINE j2sun
force_model.f90:   SUBROUTINE genrel(x,vs,drgr) 
force_model.f90:   END SUBROUTINE genrel
force_model.f90:   SUBROUTINE eihrel(x,vs,xpla,d,rpla,xsun,drgr) 
force_model.f90:   END SUBROUTINE eihrel          
force_model.f90:  END SUBROUTINE force  
force_model.f90:END MODULE force_model  
force_model.f90:SUBROUTINE radar_ob(type,m) 
force_model.f90:END SUBROUTINE radar_ob
force_model.f90:SUBROUTINE selpert(name,found) 
force_model.f90:END  SUBROUTINE selpert
force_model.f90:SUBROUTINE selpert2(nam0,namp,nfound) 
force_model.f90:END SUBROUTINE selpert2
force_model.f90:LOGICAL FUNCTION velocity_req()
force_model.f90:END FUNCTION velocity_req

least_squares.f90:MODULE least_squares
least_squares.f90:     SUBROUTINE errmod_set(error_model)
least_squares.f90:     END SUBROUTINE errmod_set
least_squares.f90:      SUBROUTINE fdiff_cor(batch,iarc,obs0,ini0,ok,cov0,               &
least_squares.f90:      END SUBROUTINE fdiff_cor  
least_squares.f90:      SUBROUTINE diff_cor(m,obs,obsw,t0,eq0,icor,gmag,   &
least_squares.f90:      END SUBROUTINE diff_cor
least_squares.f90:      SUBROUTINE sin_cor(m,obs_s,obsw_s,t0,icor,gmag,  &
least_squares.f90:      END SUBROUTINE sin_cor
least_squares.f90:      SUBROUTINE blockset(m,obs,obsw) 
least_squares.f90:      END SUBROUTINE blockset
least_squares.f90:      SUBROUTINE blockdef(obs,m) 
least_squares.f90:      END SUBROUTINE blockdef 
least_squares.f90:      SUBROUTINE blocomp(m,obs,obsw,station,indblock,        &
least_squares.f90:      END SUBROUTINE blocomp    
least_squares.f90:      SUBROUTINE sort_obs(t0,obs,obsw,noss,iposs2,obs_s,obsw_s) 
least_squares.f90:      END SUBROUTINE sort_obs                                          
least_squares.f90:      SUBROUTINE unsort_obs(iposs,noss,obsw_s,obsw)
least_squares.f90:      END SUBROUTINE unsort_obs
least_squares.f90:      SUBROUTINE min_sol(obs_s,obsw_s,m,g,icor,iunf,gtwg,dx0,gamma,csinor,cond)
least_squares.f90:      END SUBROUTINE min_sol  
least_squares.f90:      SUBROUTINE invmat(c,nx,ndim,a,cond,indp,iunf) 
least_squares.f90:      END SUBROUTINE invmat 
least_squares.f90:      SUBROUTINE fit_weight(obs1,obsw1,res0,w) 
least_squares.f90:      END SUBROUTINE fit_weight                                          
least_squares.f90:      SUBROUTINE reject_obs(unilog,csinor,obs_s,obsw_s,                 &
least_squares.f90:    END SUBROUTINE reject_obs                                          
least_squares.f90:      SUBROUTINE mag_est(m,obs,obsw,h0,rmsh) 
least_squares.f90:      END SUBROUTINE mag_est  
least_squares.f90:      SUBROUTINE write_photom(iupho,name0,h0,gma0,obs,obsw,m)
least_squares.f90:      END SUBROUTINE write_photom
least_squares.f90:      SUBROUTINE rejini 
least_squares.f90:      END SUBROUTINE rejini
least_squares.f90:      SUBROUTINE difini 
least_squares.f90:      END SUBROUTINE difini        
least_squares.f90:      SUBROUTINE bizset(ecclim,samin,samax,phmin,ahmax)                 
least_squares.f90:      END SUBROUTINE bizset                                             
least_squares.f90:      SUBROUTINE outcov(iun,icor,gamma,c)                               
least_squares.f90:      end subroutine outcov 
least_squares.f90:      DOUBLE PRECISION FUNCTION rms_compute(obs,obsw,n)
least_squares.f90:      END FUNCTION rms_compute
least_squares.f90:      LOGICAL FUNCTION entopp(index,sel,mjd,nobs) 
least_squares.f90:      END FUNCTION entopp
least_squares.f90:      LOGICAL FUNCTION entopp_radar(index,sel,mjd,type,nobs) 
least_squares.f90:      END FUNCTION entopp_radar
least_squares.f90:END MODULE least_squares 
least_squares.f90:      DOUBLE PRECISION FUNCTION rescov(nsolv,nused,csinor)              
least_squares.f90:      END FUNCTION rescov    
least_squares.f90:      DOUBLE PRECISION FUNCTION meanti(tau,rmsa,rmsd,m)                 
least_squares.f90:      END FUNCTION meanti                                               
least_squares.f90:      LOGICAL FUNCTION bizarre(eq)                                      
least_squares.f90:      END FUNCTION bizarre  
  
moid_compute.f90:      SUBROUTINE nomoid(t0,eq0,moid,icon,dnp,dnm) 
moid_compute.f90:      END SUBROUTINE nomoid                                          
moid_compute.f90:      SUBROUTINE nodedi(eq,eqp,dnp,dnm) 
moid_compute.f90:      END SUBROUTINE nodedi                                          

multiple_sol.f90:MODULE multiple_sol  
multiple_sol.f90:      SUBROUTINE f_multi(batch,obsc,inic,ok,covc,tc,         &
multiple_sol.f90:      END  SUBROUTINE f_multi    
multiple_sol.f90:      SUBROUTINE nmulti(nam0,                                           &
multiple_sol.f90:      END SUBROUTINE nmulti  
multiple_sol.f90:      SUBROUTINE mult_input(catname,eqa,cc,gg,hmu,tcat,                 &
multiple_sol.f90:      END SUBROUTINE mult_input
multiple_sol.f90:      SUBROUTINE fmuobs(tc,gmag,type,ids,t1,tut1,sigma,eqm,hmu,         &
multiple_sol.f90:      END SUBROUTINE fmuobs                                           
multiple_sol.f90:      SUBROUTINE fmupro(iun20,imim,imip,t0,eqm,hmu,gm,cm,tr,eq1,g1,c1) 
multiple_sol.f90:      END SUBROUTINE fmupro
multiple_sol.f90:      SUBROUTINE fmuplo(eqm,tc,numb,eqc,titnam,sigma) 
multiple_sol.f90:      END SUBROUTINE fmuplo      
multiple_sol.f90:      SUBROUTINE outmul(titnam,filnam,t1,sigma,alpha,delta,             &
multiple_sol.f90:      END SUBROUTINE outmul                                          
multiple_sol.f90:      SUBROUTINE prop_sig(batch,tc,eq1,eq2,dn,sigma,mc,obs,obsw,gmag,                 &
multiple_sol.f90:      END SUBROUTINE prop_sig                                          
multiple_sol.f90:      SUBROUTINE int_step(tc,eq0,eq1,hh,imint,                              &
multiple_sol.f90:      END SUBROUTINE int_step                                          
multiple_sol.f90:      SUBROUTINE diff_vin(m,obs,obsw,t0,eq0,peq,hc,gmag,    &
multiple_sol.f90:      END SUBROUTINE diff_vin                                          
multiple_sol.f90:SUBROUTINE graha_1(a,n,v) 
multiple_sol.f90:END SUBROUTINE graha_1
multiple_sol.f90:END MODULE multiple_sol                         
multiple_sol.f90:      SUBROUTINE weak_dir(gamma,wdir,sdir,iun8) 
multiple_sol.f90:      END SUBROUTINE weak_dir      

obs_correl.f90:MODULE obs_correl
obs_correl.f90:SUBROUTINE obscor(errmod,obs1,w1,obs2,w2,covra,covdec)
obs_correl.f90:END SUBROUTINE obscor
obs_correl.f90:      SUBROUTINE fcorob(kfun,nfun,par,nparf,dt,fun)
obs_correl.f90:      END SUBROUTINE fcorob
obs_correl.f90:      SUBROUTINE rdcorm(file)
obs_correl.f90:      END SUBROUTINE rdcorm
obs_correl.f90:      SUBROUTINE fcsfun(name,kfun,npar)
obs_correl.f90:      END SUBROUTINE fcsfun
obs_correl.f90:END MODULE obs_correl

plocbd.f90:      SUBROUTINE ploae(t0,a,e,aa,ee,sigma,npo,titnam) 
plocbd.f90:      SUBROUTINE getdev(idev) 
plocbd.f90:      SUBROUTINE plocbd(titnam,alpha,delta,sigma,tobs,da,dd,npo,type)
plocbd.f90:      END SUBROUTINE plocbd                                          
plocbd.f90:      SUBROUTINE ploobs(titnam,alpha,delta,sigma,tobs,da,dd,npo,        &
plocbd.f90:      END SUBROUTINE ploobs                                          
plocbd.f90:      SUBROUTINE plotob(xd,yd,xx,yy,n,xlab,ylab,title,idev,istyle) 

pred_obs.f90:MODULE pred_obs
pred_obs.f90:      SUBROUTINE predic_obs(coo,t0,idsta,tobs,east0,h,g,type,       &
pred_obs.f90:      END SUBROUTINE predic_obs 
pred_obs.f90:      SUBROUTINE alph_del2 (east,t0,tobs,iobscod,obs4,dobde,ider,twobo   &
pred_obs.f90:      END SUBROUTINE alph_del2                                          
pred_obs.f90:      SUBROUTINE oss_dif2(xast,xea,tobs,iobscod,obs4,ider,dobdx,      &
pred_obs.f90:      END SUBROUTINE oss_dif2 
pred_obs.f90:      SUBROUTINE pre_obs_att(t0,tobs,eq,alpha,delta)
pred_obs.f90:      END SUBROUTINE pre_obs_att 
pred_obs.f90:      SUBROUTINE alph_del (east,tk,tauj,iocj,pos,vel,ider,twobo,alj,dej,dade,ddde, &
pred_obs.f90:      END SUBROUTINE alph_del                                           
pred_obs.f90:      SUBROUTINE oss_dif(xast,xea,tauj,idst,pos,vel,alj,dej,ider,dadx,dddx, &
pred_obs.f90:      END SUBROUTINE oss_dif                                          
pred_obs.f90:      SUBROUTINE r_rdot (east,t0,tr,ioc,tech,posr,post,r,v,drde,dvde,ider) 
pred_obs.f90:      SUBROUTINE deldop1(p,pdot,q,qdot,e,edot,deldop) 
pred_obs.f90:      END SUBROUTINE deldop1                                          
pred_obs.f90:      SUBROUTINE deldop2(xast,xsta,vsta,rsta,drsta,rhov,drhov,rho,drho, &
pred_obs.f90:      END SUBROUTINE deldop2
pred_obs.f90:      END SUBROUTINE r_rdot
pred_obs.f90:      SUBROUTINE aber1(xrel,vrel,xcor) 
pred_obs.f90:      END SUBROUTINE aber1      
pred_obs.f90:      SUBROUTINE outobc(iun,type,ids,t1,alpha,delta,hmagn,adot,ddot,    &
pred_obs.f90:      END SUBROUTINE outobc
pred_obs.f90:      DOUBLE PRECISION FUNCTION deltau(xast,xsta,rho,r) 
pred_obs.f90:      END FUNCTION deltau                                         
pred_obs.f90:    END MODULE pred_obs   
pred_obs.f90:      DOUBLE PRECISION FUNCTION appmag(h,g,ds,dt,beta) 
pred_obs.f90:      END FUNCTION appmag  

propag_el.f90:MODULE propag_state2
propag_el.f90:SUBROUTINE propag(el,t2,xast,xea,ider,dxde)
propag_el.f90:END SUBROUTINE propag 
propag_el.f90:END MODULE propag_state2

propag_state.f90:MODULE propag_state
propag_state.f90:  SUBROUTINE propag(t0,east,t2,xast,xea,ider,dxde,ddxde)
propag_state.f90:      END SUBROUTINE propag 
propag_state.f90:      SUBROUTINE inipro 
propag_state.f90:      END SUBROUTINE inipro  
propag_state.f90:      SUBROUTINE selmet(eq,hmax) 
propag_state.f90:      END SUBROUTINE selmet 
propag_state.f90:      SUBROUTINE propin(nfl,y1,t1,t2,y2,h,nvar,dx0de) 
propag_state.f90:      END SUBROUTINE propin                                          
propag_state.f90:      SUBROUTINE bdnste(t1,y1,h,h2,nstep,m,j1,dd,delta,nvar2,nvar2x,    &
propag_state.f90:      END SUBROUTINE bdnste 
propag_state.f90:      SUBROUTINE bdintrp(t1,h,s,m,dd,delta,j1,nvar2,nvar2x,nvar,y)   
propag_state.f90:        SUBROUTINE compco_intrp()
propag_state.f90:        END SUBROUTINE compco_intrp
propag_state.f90:      END SUBROUTINE bdintrp
propag_state.f90:      SUBROUTINE clocms(idc,tt,xa,va,xpla) 
propag_state.f90:      END SUBROUTINE clocms             
propag_state.f90:      SUBROUTINE catst(m,m1,nvar2,nvar2x,nvar,delta,dd,y1,h,h2) 
propag_state.f90:      END SUBROUTINE catst                                          
propag_state.f90:      SUBROUTINE selste(ecc,enne,error,mms,hmax,h) 
propag_state.f90:      END SUBROUTINE selste                                          
propag_state.f90:      SUBROUTINE compco(m1,cs,fs,bs,as) 
propag_state.f90:      END SUBROUTINE compco                                          
propag_state.f90:      SUBROUTINE zed(e,m,f,eps,i,igr)
propag_state.f90:      END SUBROUTINE zed                                          
propag_state.f90:      SUBROUTINE invaxv(x,v,nvar2) 
propag_state.f90:      ENDSUBROUTINE invaxv                                            
propag_state.f90:      SUBROUTINE vawrxv(x,v,dxdx0,nvar2) 
propag_state.f90:      END SUBROUTINE vawrxv                                          
propag_state.f90:      SUBROUTINE varunw(dxdx0,x,v,nvar2) 
propag_state.f90:      END SUBROUTINE varunw    
propag_state.f90:      SUBROUTINE inivar(y1,nvar2,nvar) 
propag_state.f90:      END SUBROUTINE inivar                                           
propag_state.f90: END MODULE propag_state 
propag_state.f90:      SUBROUTINE set_restart(res_log)
propag_state.f90:      END SUBROUTINE set_restart 
propag_state.f90:      SUBROUTINE varwra(y2,dxdx0,nvar,nvar2) 
propag_state.f90:      END  SUBROUTINE varwra  
propag_state.f90:      SUBROUTINE propa2(t0,east,t2,xast,xea,ider,dxde,ddxde) 
propag_state.f90:      END SUBROUTINE propa2
propag_state.f90:      double precision function bessel(i,x) 
propag_state.f90:      END function bessel

ra15_mod.f90:MODULE ra15_mod
ra15_mod.f90:      SUBROUTINE ra15(x,v,tini,tfin,tcur,nv,nclass,idcend) 
ra15_mod.f90:      END SUBROUTINE ra15                                          
ra15_mod.f90:      SUBROUTINE rasust(m,t,t2,tm,tini,x,v,b,f1,nv,ncl,npq,g,epsi,nf)
ra15_mod.f90:      END SUBROUTINE rasust                                          
ra15_mod.f90:      SUBROUTINE rapred(ncl,x,v,t,t2,f1,b,nv) 
ra15_mod.f90:      END SUBROUTINE rapred                                          
ra15_mod.f90:      SUBROUTINE rabeta(nv,b,d,g) 
ra15_mod.f90:      END SUBROUTINE rabeta                                          
ra15_mod.f90:      SUBROUTINE bintrp(q,b,e,bd,nv,ns) 
ra15_mod.f90:      END SUBROUTINE bintrp                                          
ra15_mod.f90:      SUBROUTINE radcon(ncl) 
ra15_mod.f90:      END SUBROUTINE radcon 
 ra15_mod.f90:END MODULE ra15_mod
          
rmodel.f90:SUBROUTINE rmodel 
rmodel.f90:END SUBROUTINE rmodel

runge_kutta_gauss.f90:MODULE runge_kutta_gauss
runge_kutta_gauss.f90:      SUBROUTINE rkimp(t1,h,y1,dery,ck,is,y3,lit,fct2,                  &
runge_kutta_gauss.f90:      END SUBROUTINE rkimp
runge_kutta_gauss.f90:      SUBROUTINE fct(t,y,dery,nvar,fct2,ips,imem)
runge_kutta_gauss.f90:      END SUBROUTINE fct                                          
runge_kutta_gauss.f90:      SUBROUTINE rkstep(ep,npas,nrk,lf,h) 
runge_kutta_gauss.f90:      END SUBROUTINE rkstep  
runge_kutta_gauss.f90:      SUBROUTINE kintrp(ck1,ck,is,nvar) 
runge_kutta_gauss.f90:      END SUBROUTINE kintrp                                          
runge_kutta_gauss.f90:      SUBROUTINE legnum(is,isfl) 
runge_kutta_gauss.f90:      END SUBROUTINE legnum  
runge_kutta_gauss.f90:      SUBROUTINE rkg(t1,xa,va,nv,h,xat,vat,xplat) 
runge_kutta_gauss.f90:      END SUBROUTINE rkg                                          
runge_kutta_gauss.f90:      SUBROUTINE fctcl(t,y,dery,nvar,xxpla,ips,imem)
runge_kutta_gauss.f90:      END SUBROUTINE  fctcl   
runge_kutta_gauss.f90:END MODULE runge_kutta_gauss

semi_linear.f90:SUBROUTINE linobs(ibv,npo,eq,axes,sig,b,v,sigma,ceicel,elm,npo1) 
semi_linear.f90:      END SUBROUTINE linobs                                          
semi_linear.f90:      SUBROUTINE ellips(daddet,gamm0,sig,axes,gamad) 
semi_linear.f90:      END SUBROUTINE ellips                                          
semi_linear.f90:SUBROUTINE elemov(x,y,v,ceicel,del) 
semi_linear.f90:END SUBROUTINE elemov                                          
semi_linear.f90:      SUBROUTINE slinel(dtpdet,gc,cc,ceicel,b,v) 
semi_linear.f90:      END SUBROUTINE slinel  
semi_linear.f90:      SUBROUTINE graha(a,n,v) 
semi_linear.f90:      END SUBROUTINE graha
semi_linear.f90:      SUBROUTINE versor(n,a,epsi,b,vl,ize) 
semi_linear.f90:      END  SUBROUTINE versor           
semi_linear.f90:      SUBROUTINE preob4(t0,idsta,t1,eq,h,g,gameq,                       &
semi_linear.f90:      SUBROUTINE linobs4(ibv,npo,eq,axes,sig,b,v,sigma,ceicel,elm,      &
semi_linear.f90:      END SUBROUTINE linobs4                                          
semi_linear.f90:      SUBROUTINE ellip4(daddet,gamm0,sig,axes,gamad) 
semi_linear.f90:      END SUBROUTINE ellip4                                          
semi_linear.f90:      SUBROUTINE elemo4(x,y,v,ceicel,del) 
semi_linear.f90:      END SUBROUTINE elemo4                                          
semi_linear.f90:      SUBROUTINE slinel4(dtpdet,gc,cc,ceicel,b,v) 
semi_linear.f90:      END SUBROUTINE slinel4  
                                        
target_plane.f90:MODULE target_plane
target_plane.f90:      SUBROUTINE fclan2(batchcl,t1,iun20,ok,siglim,                     &
target_plane.f90:      END SUBROUTINE fclan2         
target_plane.f90:      SUBROUTINE mtpsel2(batchcl,verbose,error) 
target_plane.f90:      END SUBROUTINE mtpsel2                        
target_plane.f90:      SUBROUTINE newton_tp(batchcl,inl,iun20,siglim,ok,                 &
target_plane.f90:      END SUBROUTINE newton_tp 
target_plane.f90:      SUBROUTINE tpslin(batchcl,inl,iun20,astna0,t0,eq0,gc,cc,ok) 
target_plane.f90:      END SUBROUTINE tpslin                                      
target_plane.f90:      SUBROUTINE virimp(tpc,dtpdet,axes,sig,ceicel,b,v,tc,eqc,gc,cc,    &
target_plane.f90:      END SUBROUTINE virimp
target_plane.f90:END MODULE target_plane                                      
target_plane.f90:      SUBROUTINE aftclov(iplam,t0,tcla,v_inf,tbefore,tafter) 
target_plane.f90:      END SUBROUTINE aftclov 
target_plane.f90:      DOUBLE PRECISION FUNCTION v_infty(eq0) 
target_plane.f90:      END FUNCTION v_infty     

tp_trace.f90:MODULE tp_trace
tp_trace.f90:      SUBROUTINE str_clan(dx1dx0,dx0de) 
tp_trace.f90:      SUBROUTINE mtp_ref(tpno,dx,v3,vt3) 
tp_trace.f90:      END SUBROUTINE mtp_ref                    
tp_trace.f90:      SUBROUTINE mtp_rot3(batchcl,vt3,dx,dv,dxde,gc,                     &
tp_trace.f90:      END SUBROUTINE mtp_rot3     
tp_trace.f90:      SUBROUTINE wri_clan(iuncla,planam,tcla,xcla,vcla,                 &
tp_trace.f90:      END SUBROUTINE wri_clan                        
tp_trace.f90:      SUBROUTINE marg_2(gmtp,gxz,svv,cxv,czv) 
tp_trace.f90:      END SUBROUTINE marg_2                                          
tp_trace.f90:      END SUBROUTINE str_clan
tp_trace.f90:      SUBROUTINE rea_clorec(iunclo,reqpla,imulcur,va_trace,               &
tp_trace.f90:      SUBROUTINE rea_clan(record,va_trace,error) 
tp_trace.f90:      END SUBROUTINE rea_clan  
tp_trace.f90:   END SUBROUTINE rea_clorec
tp_trace.f90:END MODULE tp_trace

yark_pert.f90:MODULE yark_pert
yark_pert.f90:      SUBROUTINE yarkdi(xast,a,iparti) 
yark_pert.f90:      END SUBROUTINE yarkdi                                          
yark_pert.f90:      SUBROUTINE yarkse(xast,vast,a,iparti) 
yark_pert.f90:      END SUBROUTINE yarkse                                          
yark_pert.f90:      SUBROUTINE yarkinit(astnam,eltype,elem) 
yark_pert.f90:      END SUBROUTINE yarkinit                                                  
yark_pert.f90:END MODULE yark_pert
