!=================MODULE mulsto===================
! mulsto.o: \
!	../include/parobx.h90 \
!	../suit/astrometric_observations.mod \
!	../suit/orbit_elements.mod 
!=================================================
! WARNING: CHANGE NAME!!!!
MODULE mulsto 
  USE astrometric_observations 
  USE orbit_elements
  IMPLICIT NONE 
!===============observation data needed by difvin=======================       
  INCLUDE 'parobx.h90'
  INTEGER :: m_m                              ! actual number of observations
  TYPE(ast_obs), DIMENSION(nobx), SAVE  :: obs_m    ! observations
  TYPE(ast_wbsr), DIMENSION(nobx) :: obsw_m
  DOUBLE PRECISION :: rms_m,rmsmag_m 
CONTAINS 
! ===========================================                           
! RETINOBS                                                                
! observation input control routine 
! version 3.0 fortran90 A. Milani June 2003                                    
! reads the .rwo,file with the errror_model given
  SUBROUTINE retinobs(obsdir,nam0,obs0,m,obs,obsw,error_model,rms,rmsmag,nlef,iun20)
! ==============INPUT==================                                 
    CHARACTER*60, INTENT(IN) :: obsdir ! input directory (all files nam0.rwo must be there) 
    CHARACTER*9,INTENT(IN) :: nam0 ! asteroid name (9 characters)
    INTEGER, INTENT(IN) :: iun20 ! messages unit
    INTEGER, INTENT(IN) :: nlef ! observation numbers: space left 
! =============OUTPUT================================                   
    LOGICAL,INTENT(OUT) :: obs0 ! successfuj input flag
! ===== observational data ===========================                  
    INTEGER,INTENT(OUT) :: m ! observation number
    TYPE(ast_obs),DIMENSION(nlef) :: obs ! observations new data type
    TYPE(ast_wbsr),DIMENSION(nlef) :: obsw ! observation weights  new data type
      CHARACTER*(20),INTENT(OUT) :: error_model ! error model file name
      DOUBLE PRECISION, INTENT(OUT) :: rms,rmsmag ! RMS of astrometric, photometric residuals
! ===========END INTERFACE========================= 
      CHARACTER*60 rwofi0 ! .rwo file name
      INTEGER lrwo,le 
      LOGICAL rwo 
      CHARACTER*60 :: obsdir1
      INCLUDE 'sysdep.h90' ! directory char
      INTEGER j ! loop index
! =============EXECUTION BEGINS======================
! check for existence of the corresponding .rwo file                    
! ========================================================              
!  compute rwo file name; no subdirectory structure
      obsdir1=obsdir
      CALL rmsp(obsdir1,le) 
      rwofi0=obsdir1(1:le)//'/'//nam0//'.rwo'
      CALL rmsp(rwofi0,lrwo)
! existence of .rwo file                                        
      INQUIRE(file=rwofi0(1:lrwo),exist=rwo) 
! ========================================================              
! select operations mode                                                
! ========================================================              
      IF(.not.rwo)THEN 
         WRITE(*,*) 'No .rwo file for ',nam0,' ',rwofi0(1:lrwo) 
         obs0=.false. 
         RETURN 
! ========================================================              
      ELSE 
!        WRITE(*,*)'.rwo found for ',nam0                               
! read .rwo, and store data in final array
         CALL read_rwo(rwofi0(1:lrwo),obs,obsw,m,error_model,rms,rmsmag)
!        WRITE(*,*)'rearwo: ',m,' obs from  ',rwofi0(1:lrwo)            
         WRITE(iun20,*)'rearwo: ',m,' obs from ',rwofi0(1:lrwo) 
         IF(m.eq.0)THEN 
            obs0=.false. 
         ELSE 
            obs0=.true. 
         ENDIF 
      ENDIF 
! get asteroid radius (if necessary) before returning
      CALL aster_radius(obs%objdes,obs%type,m)
      RETURN 
      END SUBROUTINE retinobs                                         



END MODULE mulsto








